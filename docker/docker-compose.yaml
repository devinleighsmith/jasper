version: '3.4'
services:
  web:
    image: '${COMPOSE_PROJECT_NAME}-web'
    environment:
      - API_URL=${API_URL}
      - USE_SELF_SIGNED_SSL=${USE_SELF_SIGNED_SSL}
      - IpFilterRules=${IpFilterRules}
      - RealIpFrom=${RealIpFrom}
      - WEB_BASE_HREF=${WEB_BASE_HREF}
      - IncludeSiteminderHeaders=${IncludeSiteminderHeaders}
    ports:
      - 8080:8080
    depends_on:
      - api

  web-dev:
    image: '${COMPOSE_PROJECT_NAME}-web-dev'
    environment:
      - API_URL=${API_URL}
      - WEB_BASE_HREF=${WEB_BASE_HREF}
      - DEV_MODE=false
      - NODE_ENV=development
      - NPM_CONFIG_LOGLEVEL=notice
      - VITE_PORT=1339
      - CHOKIDAR_USEPOLLING=true
    ports:
      - '8080:1339'
    volumes:
      - '${LOCAL_WORKSPACE_FOLDER-..}/web/src:/opt/app-root/src/src'
      - '${LOCAL_WORKSPACE_FOLDER-..}/web/package.json:/opt/app-root/src/package.json'
    depends_on:
      - api

  api:
    image: '${COMPOSE_PROJECT_NAME}-api'
    environment:
      - ASPNETCORE_URLS=${ASPNETCORE_URLS}
      - Auth__AllowSiteMinderUserType=${ALLOW_SITE_MINDER_USER_TYPE}
      - Auth__UserId=${USER_ID}
      - Auth__UserPassword=${USER_PASSWORD}
      - AuthorizerKey=${AuthorizerKey}
      - AWS_API_GATEWAY_API_KEY=${AWS_API_GATEWAY_API_KEY}
      - AWS_API_GATEWAY_URL=${AWS_API_GATEWAY_URL}
      - DatabaseConnectionString=${DatabaseConnectionString}
      - DataProtectionKeyEncryptionKey=${DataProtectionKeyEncryptionKey}
      - DEFAULT_USERS=${DEFAULT_USERS}
      - FileServicesClient__Password=${FileServicesClientPassword}
      - FileServicesClient__Url=${FileServicesClientUrl}
      - FileServicesClient__Username=${FileServicesClientUsername}
      - KEY_DOCS_BINDER_REFRESH_HOURS=${KEY_DOCS_BINDER_REFRESH_HOURS}
      - Keycloak__Audience=${KeycloakAudience}
      - Keycloak__Authority=${KeycloakAuthority}
      - Keycloak__Client=${KeycloakClient}
      - Keycloak__PresReqConfId=${KeycloakPresReqConfId}
      - Keycloak__Secret=${KeycloakSecret}
      - Keycloak__VcIdpHint=${KeycloakVcIdpHint}
      - LocationServicesClient__Password=${LocationServicesClientPassword}
      - LocationServicesClient__Url=${LocationServicesClientUrl}
      - LocationServicesClient__Username=${LocationServicesClientUsername}
      - LookupServicesClient__Password=${LookupServicesClientPassword}
      - LookupServicesClient__Url=${LookupServicesClientUrl}
      - LookupServicesClient__Username=${LookupServicesClientUsername}
      - MONGODB_CONNECTION_STRING=${MONGODB_CONNECTION_STRING}
      - MONGODB_NAME=${MONGODB_NAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - MONGODB_PORT=${MONGODB_PORT}
      - MONGODB_SERVER=${MONGODB_SERVER}
      - MONGODB_USER=${MONGODB_USER}
      - PCSS__JudgeHomeLocationId=${PCSS_JUDGE_HOME_LOCATION_ID}
      - PCSS__JudgeId=${PCSS_JUDGE_ID}
      - PCSS__Password=${PCSS_PASSWORD}
      - PCSS__Url=${PCSS_URL}
      - PCSS__Username=${PCSS_USERNAME}
      - TD__Url=${TD_URL}
      - TD__Username=${TD_USERNAME}
      - TD__Password=${TD_PASSWORD}
      - Request__AgencyIdentifierId=${RequestAgencyIdentifierId}
      - Request__ApplicationCd=${RequestApplicationCd}
      - Request__GetUserLoginDefaultAgencyId=${RequestGetUserLoginDefaultAgencyId}
      - Request__PartId=${RequestPartId}
      - SiteMinderLogoutUrl=${SiteMinderLogoutUrl}
      - SplunkCollectorId=${SplunkCollectorId}
      - SplunkCollectorUrl=${SplunkCollectorUrl}
      - SplunkToken=${SplunkToken}
      - UserServicesClient__Password=${UserServicesClientPassword}
      - UserServicesClient__Url=${UserServicesClientUrl}
      - UserServicesClient__Username=${UserServicesClientUsername}

    ports:
      - 5000:5000
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER-..}/api/:/opt/app-root/src/api
      - ${LOCAL_WORKSPACE_FOLDER-..}/db/:/opt/app-root/src/db
      - ${LOCAL_WORKSPACE_FOLDER-..}/jc-interface-client/:/opt/app-root/src/jc-interface-client
      - ${LOCAL_WORKSPACE_FOLDER-..}/pcss-client/:/opt/app-root/src/pcss-client
      - ${LOCAL_WORKSPACE_FOLDER-..}/transitory-documents-client/:/opt/app-root/src/transitory-documents-client
      - api-dev-bin:/opt/app-root/src/api/bin
      - api-dev-obj:/opt/app-root/src/api/obj
      - ${LOCAL_WORKSPACE_FOLDER-.}/seed:/opt/app-root/data
    depends_on:
      - db-pg
      - db-mongo

    command: >
      /bin/bash -c "
        echo Waiting for the database service to start up ...;
        sleep 10;
        dotnet watch run --project /opt/app-root/src/api/api.csproj --urls='http://+:5000';"

  transitory-documents-api:
    image: '${COMPOSE_PROJECT_NAME}-transitory-documents-api'
    environment:
      - ASPNETCORE_URLS=${ASPNETCORE_TD_URLS}
      - AuthorizerKey=${AuthorizerKey}
      - Auth__AllowSiteMinderUserType=${ALLOW_SITE_MINDER_USER_TYPE}
      - Auth__UserId=${USER_ID}
      - Auth__UserPassword=${USER_PASSWORD}
      - DataProtectionKeyEncryptionKey=${DataProtectionKeyEncryptionKey}
      - Keycloak__Audience=${KeycloakAudience}
      - Keycloak__Authority=${KeycloakAuthority}
      - Keycloak__Client=${KeycloakClient}
      - Keycloak__PresReqConfId=${KeycloakPresReqConfId}
      - Keycloak__Secret=${KeycloakSecret}
      - Keycloak__VcIdpHint=${KeycloakVcIdpHint}
      - SplunkCollectorId=${SplunkCollectorId}
      - SplunkCollectorUrl=${SplunkCollectorUrl}
      - SplunkToken=${SplunkToken}
      - UserServicesClient__Password=${UserServicesClientPassword}
      - UserServicesClient__Url=${UserServicesClientUrl}
      - UserServicesClient__Username=${UserServicesClientUsername}
      - Request__AgencyIdentifierId=${RequestAgencyIdentifierId}
      - Request__ApplicationCd=${RequestApplicationCd}
      - Request__GetUserLoginDefaultAgencyId=${RequestGetUserLoginDefaultAgencyId}
      - Request__PartId=${RequestPartId}
      - CORS_DOMAIN='http://localhost:8080'

    ports:
      - 5001:5001
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER-..}/transitory-documents-api/:/opt/app-root/src/transitory-documents-api
      - ${LOCAL_WORKSPACE_FOLDER-..}/api/:/opt/app-root/src/api
      - ${LOCAL_WORKSPACE_FOLDER-..}/db/:/opt/app-root/src/db
      - ${LOCAL_WORKSPACE_FOLDER-..}/jc-interface-client/:/opt/app-root/src/jc-interface-client
      - ${LOCAL_WORKSPACE_FOLDER-..}/pcss-client/:/opt/app-root/src/pcss-client
      - ${LOCAL_WORKSPACE_FOLDER-..}/transitory-documents-client/:/opt/app-root/src/transitory-documents-client
      - transitory-documents-api-dev-bin:/opt/app-root/src/transitory-documents-api/bin
      - transitory-documents-api-dev-obj:/opt/app-root/src/transitory-documents-api/obj

    command: >
      /bin/bash -c "
        dotnet watch run --project /opt/app-root/src/transitory-documents-api/transitory-documents-api.csproj --urls='http://+:5001';"

  db-pg:
    image: centos/postgresql-12-centos8
    environment:
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_ADMIN_PASSWORD=${POSTGRESQL_ADMIN_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER-.}/tmp:/tmp2

  db-mongo:
    image: mongo:latest
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
    volumes:
      - ${LOCAL_WORKSPACE_FOLDER-.}/tmp-mongo:/tmp-mongo

volumes:
  api-dev-bin:
  api-dev-obj:
  transitory-documents-api-dev-bin:
  transitory-documents-api-dev-obj:
