# Dockerfile used by Github Action
ARG dotnet_version=9.0
FROM mcr.microsoft.com/dotnet/aspnet:${dotnet_version} AS base
WORKDIR /app
EXPOSE 8080
ENV ASPNETCORE_URLS=http://*:8080
ENV ASPNETCORE_FORWARDEDHEADERS_ENABLED=true
ENV DOTNET_gcServer=1
ARG VERSION
ENV VERSION=$VERSION

FROM mcr.microsoft.com/dotnet/sdk:${dotnet_version} AS build

WORKDIR /src

COPY ["api/api.csproj", "api/"]
COPY ["db/db.csproj", "db/"]
COPY ["jc-interface-client/jc-interface-client.csproj", "jc-interface-client/"]
COPY ["pcss-client/pcss-client.csproj", "pcss-client/"]
COPY ["transitory-documents-client/transitory-documents-client.csproj", "transitory-documents-client/"]
RUN dotnet restore api/api.csproj
RUN dotnet restore db/db.csproj
RUN dotnet restore jc-interface-client/jc-interface-client.csproj
RUN dotnet restore pcss-client/pcss-client.csproj
RUN dotnet restore transitory-document-client/transitory-document-client.csproj
COPY . .
RUN dotnet build "api/api.csproj" -c Release
# build
FROM build AS publish
RUN dotnet publish "api/api.csproj" -c Release -o /app/publish --runtime linux-musl-x64 --no-self-contained

FROM base AS final

# Download and install the AWS CA bundle
RUN apt-get update && apt-get --no-install-recommends install -y curl ca-certificates \
    && curl https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem -o /usr/local/share/ca-certificates/aws-rds.crt \
    && update-ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# copy app
WORKDIR /app
COPY --from=publish /app/publish .
ENTRYPOINT ["dotnet", "api.dll"]
